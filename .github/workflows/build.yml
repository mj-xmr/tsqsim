name: ci/gh-actions/cli

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

# The below variables reduce repetitions across similar targets
env:
  REMOVE_BUNDLED_BOOST : rm -rf /usr/local/share/boost
  APT_SET_CONF: |
        echo "Acquire::Retries       \"3\";"   | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout  \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom

jobs:
  build-ubuntu:
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    strategy:
      fail-fast: false
#      max-parallel: 1 # Single threaded for now, because the jobs overwrite each other's data/bin/* files?
      matrix:
        os: [ubuntu-latest] #, ubuntu-18.04] # TODO: Consider(!) supporting the previous version.
        compiler: [gcc, clang]
        linkage: ["", --shared] # TODO: Add LTO. Also needed for URT library via its CMakeLists.txt
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    # Volatile cache
    - name: ccache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key:          ccache03-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.linkage }}-build-${{ github.sha }}
        restore-keys: ccache03-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.linkage }}-build-
    # Less volatile cache
    - name: data cache
      uses: actions/cache@v2
      with:
        path: build/data/data/txt
        key:          data-${{ hashFiles('build/data/data/txt/**/*') }}
        restore-keys: data-${{ hashFiles('build/data/data/txt/**/*') }}
#    - name: deps cache
#      uses: actions/cache@v2
#      with:
#        path: build/deps/dload
#        key:          deps-${{ hashFiles('build/deps/dload/*') }}
#        restore-keys: deps-${{ hashFiles('build/deps/dload/*') }}
    - name: prepare environment
      run: util/prep-env.sh
    - name: set apt conf
      run: ${{env.APT_SET_CONF}}
    - name: install dependencies
      run: util/deps-pull.sh
    - name: build & install the unmanaged dependencies
      run: util/deps-build.sh
    - name: build
      run: ./ci-default --compiler ${{ matrix.compiler }} ${{ matrix.linkage }} --unity --build-qt
    - name: run demo
      run: ./ci-default --compiler ${{ matrix.compiler }} ${{ matrix.linkage }} --unity --build-qt --run-demo

# TODO: todos sorted by priority*realism:
# TODO: All the unmaintained denendencies should have their own CMakeLists.txt file (URT. Others?) and the util/deps-build.sh should not be used, if possible.
# TODO: All the testing should be done in a separate job, AFTER building and downloading resources, in order to use caches better (short and easy. Needs to have the build scripts restructured - separate building and testing)
# TODO: Add OSX build.	   Problem: stdfwd.hh has to be conditionally disabled for _APPLE_ (huge but simple)
# TODO: Add Windows build. Problem: EnjoLibBoost fails to compile without wstring (short but harder)


